// this is a className, not a node name
.ui-tooltip {
    position: relative;
    background-color: var(--tip-bg);
    color: var(--tip-txt);
    box-shadow: var(--tip-shadow);
    padding: var(--tip-pad);
    font-size: var(--tip-txt-size);
    border-radius: var(--tip-brd-rad);
    border: 1px solid var(--tip-brd);
    // .B default
    .tooltip-arrow {
        position: absolute;
        transform: translate(-50%, -100%);
        top: 0;
        left: 50%;
        // border: 1px solid blue;
        width: calc(var(--tip-arrow-size) * 2);
        height: var(--tip-arrow-size);
        overflow: hidden;
        &:before {
            content: ' ';
            position: absolute;
            top: 50%;
            left: 25%;
            transform: rotate(45deg);
            width: var(--tip-arrow-size);
            height: var(--tip-arrow-size);
            background-color: white;
            box-shadow: 0 0 3px rgba(0, 0, 0, 0.3);
        }
    }
    &.shift-left {
        .tooltip-arrow {
            left: 75%;
        }
    }
    &.shift-right {
        .tooltip-arrow {
            left: 25%;
        }
    }
    &.T {
        .tooltip-arrow {
            top: auto;
            bottom: 0;
            left: 50%;
            transform: translate(-50%, 100%);
            &::before {
                top: -50%;
            }
        }
    }
    &.R {
        .tooltip-arrow {
            height: calc(var(--tip-arrow-size) * 2);
            width: var(--tip-arrow-size);
            left: 0;
            top: 50%;
            transform: translate(-100%, -50%);
            &::before {
                top: 25%;
                left: auto;
                right: -50%;
            }
        }
    }
    &.L {
        .tooltip-arrow {
            height: calc(var(--tip-arrow-size) * 2);
            width: var(--tip-arrow-size);
            left: auto;
            right: 0;
            top: 50%;
            transform: translate(100%, -50%);
            &::before {
                top: 25%;
                left: -50%;
            }
        }
    }
    // &:before {
    //     // R
    //     content: ' ';
    //     width: 0;
    //     height: 0;
    //     position: absolute;
    //     top: 50%;
    //     transform: translateY(-50%);
    //     right: 100%;
    //     border-width: var(--tip-arrow-size);
    //     border-style: solid;
    //     border-color: transparent var(--tip-brd) transparent transparent;
    //     // box-shadow: 2px 2px 2px rgba(0,0,0,0.5);
    // }
    &.side50:before {
        transform: none;
        top: 50px;
    }
    &.L {
        &:before {
            right: 0;
            transform: translate(100%, -50%);
            border-color: transparent transparent transparent var(--tip-brd);
        }
        &.side50:before {
            transform: translate(100%, 0);
            top: 50px;
        }
    }
    &.B {
        &:before {
            right: auto;
            left: 50%;
            top: 0;
            transform: translate(-50%, -100%);
            border-color: transparent transparent var(--tip-brd) transparent;
        }
    }

    &.error {
        background-color: var(--tip-bg-error);
        color: var(--tip-txt-error);
        border: 1px solid var(--tip-brd-error);
        &:before {
            border-color: transparent var(--tip-brd-error) transparent transparent;
        }
        &.L {
            &:before {
                border-color: transparent transparent transparent var(--tip-brd-error);
            }
        }
        &.B {
            &:before {
                border-color: transparent transparent var(--tip-brd-error) transparent;
            }
        }
        &.T {
            &:before {
                border-color: var(--tip-brd-error) transparent transparent transparent;
            }
        }
    }
}
